{"version":3,"sources":["components/Header.js","components/Alert.js","components/Home.js","components/FormInputField.js","components/CreateAlert.js","components/ThreadView.js","components/DropdownList.js","components/FilterForm.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","to","title","Alert","state","eventDetails","data","background","this","linkable","Card","bg","className","as","Body","Title","Text","id","type","Component","Home","loadingData","alerts","apiServer","setState","axios","get","res","console","log","Dimmer","active","inverted","Loader","size","map","alert","key","FormInputField","label","placeholder","propChanged","values","errorMessage","InputGroup","Prepend","FormControl","onChange","required","value","e","item","properties","target","payload","handleSubmit","event","a","async","inputNode","preventDefault","history","Object","keys","payloadKey","undefined","moment","format","post","push","formatItem","includes","substring","length","formatType","requiredProperties","bind","Segment","icon","Icon","name","circular","Form","onSubmit","example","Button","variant","ThreadView","match","params","put","comments","ListGroup","comment","i","Item","aria-label","onClick","DropdownList","isFetching","multiple","search","handleChange","handleClose","handleDropdown","Dropdown","fluid","selection","disabled","loading","options","noResultsMessage","onClose","selectOnNavigation","FilterForm","createHistory","severity","date","region","severityList","optionList","text","handleBack","field1","field2","field3","field4","basic","padded","raised","color","Grid","style","width","Field","inline","animated","Content","visible","hidden","Divider","JSON","stringify","withRouter","App","exact","path","component","CreateAlert","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e44d68e.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nfunction Header(props) {\n  return (\n    <Fragment>\n      <Link to={ '/' }>\n        <div>\n          <h2>{props.title}</h2>\n        </div>\n      </Link>\n    </Fragment>\n  )\n}\n\nexport default Header","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\n\nclass Alert extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      eventDetails: this.props.data,\n    }\n    this.background = {\n      \"Low\": \"light\",\n      \"Medium\": \"warning\",\n      \"High\": \"danger\",\n    };\n  }\n\n  render() {\n    const { eventDetails } = this.state;\n    const { linkable } = this.props\n    return (\n      <Card bg={this.background[eventDetails[8]]} className=\"m-3\">\n        <Card.Header as=\"h5\">{ eventDetails[6] }</Card.Header>\n        <Card.Body>\n          <Card.Title>{ eventDetails[7] }</Card.Title>\n          <Card.Text>\n            { `${eventDetails[3]}, ${eventDetails[4]} ${eventDetails[2]}, ${eventDetails[5]} at ${eventDetails[1]}` }\n            <br />\n            { `Priority: ${eventDetails[8]}` }\n            <br />\n            { `Author: ${eventDetails[9]}` }\n          </Card.Text>\n          {linkable ? <Link to={`/thread/${this.props.id}`}><button type=\"button\" className=\"btn btn-dark\">View Thread</button></Link> : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Header from './Header';\nimport Alert from './Alert';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      alerts: [],\n    };\n    this.apiServer = 'https://socnet.pythonanywhere.com/'\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${this.apiServer}alerts`);\n      this.setState({\n        alerts: res.data,\n        loadingData: false,\n      })\n      console.log(this.state);\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  render() {\n    const { loadingData, alerts } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header title=\"Socnet\" />\n        <Link to='/createAlert'><button type=\"button\" className=\"btn btn-primary\">Create Alert</button></Link> <br /> <br />\n        <Link to='/filterAlert'><button type=\"button\" className=\"btn btn-primary\">Filter Results</button></Link>\n        {alerts.map((alert) =>{\n          return (\n            <Alert\n              data={alert}\n              key={alert[0]}\n              id={alert[0]}\n              linkable\n            />\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nfunction FormInputField(props) {\n  const {\n    label, type, placeholder, propChanged, values, errorMessage\n  } = props;\n  if (typeof values !== \"undefined\") {\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder={placeholder}\n          as={type}\n          onChange={propChanged}\n          required\n        >\n          <option key=\"Choose...\">Choose...</option>\n          {values.map((value) => {\n            return (<option key={value}>{value}</option>);\n          })}\n        </FormControl>\n        <div>{errorMessage}</div>\n      </InputGroup>\n    );\n  } else {\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder={placeholder}\n          type={type}\n          onChange={propChanged}\n          required\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default FormInputField;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormInputField from './FormInputField';\nimport moment from 'moment';\nimport { Header, Icon, Segment } from 'semantic-ui-react';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      properties: {},\n      requiredProperties: [],\n      payload: {}\n    };\n\n    this.apiServer = 'https://socnet.pythonanywhere.com/';\n    \n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${this.apiServer}form`);\n      this.setState({\n        properties: res.data.properties,\n        requiredProperties: res.data.required,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n  propChanged = (e, item) => {\n\n    const { properties } = this.state;\n    const { value } = e.target;\n    console.log(\"props changed properties \", properties);\n    properties[item].value = value;\n    this.setState({\n      payload: properties,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    console.log(\"event is \", this.inputNode);\n    console.log(\"before payload\", this.state.payload);\n    event.preventDefault();\n\n    const { payload } = this.state;\n    const { history } = this.props;\n\n    Object.keys(payload).map((payloadKey) => {\n      if (payloadKey === \"event_severity\" && payload[payloadKey].value === undefined) {\n        payload[payloadKey] = 'Low';\n      } else\n        payload[payloadKey] = payload[payloadKey].value;\n    });\n\n    payload[\"event_datetime\"] = moment().format(\"YYYY/MM/DD h:mm:ss\");\n    console.log(\"after payload\", moment().format(\"YYYY/MM/DD h:mm:ss\"));\n    \n    try {\n      await axios.post(`${this.apiServer}alerts`, payload);\n      history.push('/main');\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n  formatItem = (item) => {\n    if (item.includes(\"event\")){\n      item=item.substring(6,item.length);\n    }\n    else {\n      item=\"sender's name\";\n    }\n    return item;\n  }\n  formatType = (type, values) => {\n    if (typeof values === \"undefined\") {\n      if (type === \"datetime\") {\n        return \"datetime-local\";\n      } else {\n        return \"text\";\n      }\n    } else {\n      return \"select\";\n    }\n  };\n\n  render() {\n    const { loadingData, properties, errorMessage } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n\n      <div className=\"container\">\n      <div className=\"container mt-5\">\n      <Segment placeholder>\n        <Header icon>\n          <Icon name='shield alternate' circular/>\n          Please help us stay safe by entering the information about the incident you wish to report.\n        </Header>\n        </Segment>\n      </div>\n          <Form className=\"container-fluid mt-4\" onSubmit={e => this.handleSubmit(e)}>\n            {Object.keys(properties).map((item) => {\n              if (item !== 'event_datetime') {\n                return (\n                  <FormInputField\n                    label={this.formatItem(item)}\n                    type={this.formatType(properties[item].type, properties[item].values)}\n                    placeholder={properties[item].example}\n                    propChanged={e => this.propChanged(e, item)}\n                    values={properties[item].values}\n                    key={this.formatItem(item)}\n                    errorMessage={errorMessage}\n                  ></FormInputField>\n                );\n              }\n            })}\n            <Button variant=\"dark\" type=\"submit\">Submit Alert</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Header from './Header';\nimport Alert from './Alert';\nimport { ListGroup, InputGroup, FormControl, Button } from 'react-bootstrap';\n\nclass ThreadView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      comments: [],\n      alert: [],\n    }\n    this.apiServer = 'https://socnet.pythonanywhere.com/'\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  };\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      console.log(this.props);\n      const res = await axios.get(`${this.apiServer}threads/${this.props.match.params.id}`);\n      const alert = await axios.get(`${this.apiServer}alerts/${this.props.match.params.id}`);\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n        alert: alert.data[0],\n      })\n      console.log(this.state.comments);\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  propChanged = (e) => {\n    const { value } = e.target;\n    console.log(value)\n    const payload = { \"text\": value }\n    this.setState({\n      payload: payload,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    event.preventDefault();\n    const { payload } = this.state;\n\n    try {\n      this.setState({ loadingData: true });\n      console.log(`${this.apiServer}threads/${this.props.match.params.id}`)\n      let res = await axios.put(`${this.apiServer}threads/${this.props.match.params.id}`, payload);\n      res = await axios.get(`${this.apiServer}threads/${this.props.match.params.id}`);\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    const { loadingData, comments, alert } = this.state;\n\n    if (loadingData) {\n      return(\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header title=\"Socnet\" />\n        <Alert\n          data={alert}\n          id={alert[0]}\n        />\n        <ListGroup>\n          {comments.map((comment, i) => {\n            return(\n              <ListGroup.Item key={i}>{comment[Object.keys(comment)[0]]}</ListGroup.Item>\n            )\n          })}\n        </ListGroup>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Add a comment</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl onChange={this.propChanged} as=\"textarea\" aria-label=\"Add a comment\" />\n          <Button variant=\"dark\" type=\"submit\" onClick= {e => this.handleSubmit(e)}>Submit Comment</Button>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default ThreadView;","import React, { Component } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nclass DropdownList extends Component {\n    state = {\n        isFetching: false, \n        multiple: true, \n        search: true, \n        value: []\n    };\n    \n    handleChange = (e, { value }) => {\n        this.setState({ value })\n        console.log(this.state.value)\n    };\n\n    handleClose = (e, {value}) => {\n        console.log(this.state.value);\n        console.log(\"Name\", this.props.placeholder)\n        this.props.handleDropdown(this.props.placeholder, this.state.value)\n    };\n\n    render() {\n        const { isFetching, multiple, search, value  } = this.state\n        return (\n            <Dropdown \n                fluid\n                selection\n                disabled = {isFetching}\n                loading = {isFetching}\n                multiple = {multiple}\n                search = {search}\n                placeholder={\"Select \" + this.props.placeholder}\n                options = {this.props.options} \n                noResultsMessage = \"No results found.\"\n                onChange={this.handleChange}\n                onClose = {this.handleClose}\n                selectOnNavigation={false}\n                value = {value}\n            />\n        )\n    }\n}\n\nexport default DropdownList;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import DatePicker from 'react-date-picker'\nimport { Grid, Button, Form, Header, Icon, Divider, Segment} from 'semantic-ui-react';\nimport DropdownList from \"./DropdownList\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst history = createHistory();\n\nclass FilterForm extends Component {\n    state = {\n        loading: false,\n        severity: [], \n        date: '', \n        region: [], \n        type: [],\n        //properties: {}\n    };\n    \n    apiServer = 'https://socnet.pythonanywhere.com/';\n\n    // Sample Input: Development time only\n    severityList = {\n        name: \"severity\",\n        type: \"dropdown\",\n        optionList: [{key: \"H\", text: \"High\", value: \"high\"}, \n                    {key: \"L\", text: \"Low\", value: \"low\"}, \n                    {key: \"M\", text: \"Medium\", value: \"medium\"}]\n    };\n\n    handleDropdown = (name, value) => {\n        this.setState({[name]: value}, () => {\n            console.log(name, value);\n            console.log(\"Data changed by dropdown\")\n            console.log(this.state.severity)\n        });\n    };\n    \n    // Excecuted when the back button is clicked\n    handleBack = () => {\n        // Soon to be depreciated\n        this.props.history.push('/main')\n    }\n\n    /// TODO: Merge handleChange with handelSubmit\n    // Debugging: Maintaining constant state \n\n    handleChange = (e, {name, value}) => { \n        this.setState({[name]:value})\n    }\n\n    handleSubmit = () => {\n        const { loading, field1, field2, field3, field4 } = this.state\n        this.setState({ severity: field1, date: field2, region: field3, type: field4 })\n\n        // for now as there is no functionality in the API\n        this.props.history.push('/main')\n    }\n\n    render() {\n        const { loading, severity, date, region, type } = this.state\n\n        return (\n            <div>\n                <Segment basic padded> <Header as=\"h1\"> Filter Alerts </Header> </Segment>\n                    <Segment padded='very' raised color='teal'>\n                        <Grid className=\"center aligned\">\n                            <Form loading={loading} onSubmit={this.handleSubmit.bind(this)} size=\"large\" style={{width: \"60%\"}}>\n                                <Form.Field>\n                                    <label> Since (Date)</label>\n                                    <input type=\"date\" \n                                        onChange={(event) => this.setState({ date: event.target.value })}\n                                        value={this.state.date} \n                                    />\n                                </Form.Field>\n                            \n                                {/* TO-DO: Write a for loop for this after making \n                                    APIs to fetch form properties */}\n\n                                <Form.Field inline >\n                                    <label > Severity </label>\n                                    < DropdownList\n                                        placeholder={this.severityList.name}\n                                        options={this.severityList.optionList}\n                                        handleDropdown={this.handleDropdown}\n                                    />\n                                </Form.Field>\n                        \n                                <Form.Field inline>\n                                    <label> Region </label>\n                                    < DropdownList\n                                        placeholder={this.severityList.name}\n                                        options={this.severityList.optionList}\n                                        handleDropdown={this.handleDropdown}\n                                    />\n                                </Form.Field>\n\n                                <Form.Field inline>\n                                    <label> Type </label>\n                                    < DropdownList\n                                        placeholder={this.severityList.name}\n                                        options={this.severityList.optionList}\n                                        handleDropdown={this.handleDropdown}\n                                    />\n                                </Form.Field>\n\n                                {/* <Form.Field>\n                                    <Checkbox label='' />\n                                </Form.Field>  */}\n\n                                <Button animated onClick= {e => this.handleBack.bind(this)}>\n                                    <Button.Content visible> Back </Button.Content>\n                                    <Button.Content hidden>\n                                        <Icon name='arrow left' />\n                                    </Button.Content>\n                                </Button>\n\n                                <Button type=\"submit\" animated>\n                                    <Button.Content visible>Submit</Button.Content>\n                                    <Button.Content hidden>\n                                        <Icon name='arrow right' />\n                                    </Button.Content>\n                                </Button>\n                        </Form>\n                       \n                    </Grid>\n                </Segment> \n                    <br />\n                    <strong> LEAVE BLANK FOR ALL </strong>\n                    <Divider />\n                    <strong> For testing before backend integration </strong>\n                    <pre>{JSON.stringify({ severity, date, region, type })}</pre>\n\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(FilterForm);","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route, Switch, BrowserRouter} from 'react-router-dom';\nimport Home from './components/Home';\nimport CreateAlert from './components/CreateAlert';\nimport ThreadView from './components/ThreadView';\nimport FilterForm from './components/FilterForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n            <Route exact path=\"/main\" component={Home} />\n            <Route exact path=\"/createAlert\" component={CreateAlert} />\n            <Route exact path=\"/thread/:id\" component={ThreadView} />\n          <Route exact path=\"/(|filterAlert)\" component={FilterForm} />  \n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}