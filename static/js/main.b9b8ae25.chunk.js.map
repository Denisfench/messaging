{"version":3,"sources":["components/Header.js","components/ThreadAlerts.js","components/Home.js","components/FormInputField.js","components/CreateAlert.js","components/Alert.js","components/ThreadView.js","components/DropdownList.js","components/FilterForm.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","to","title","ThreadAlerts","createHistory","background","apiServer","renderTableData","alerts","map","alertData","id","date","region","description","bgcolor","Table","Row","onClick","history","push","Cell","style","color","textAlign","state","loadingData","this","setState","console","log","location","e","Dimmer","active","inverted","Loader","size","padding","fixed","singleLine","padded","selectable","HeaderCell","width","Body","Component","withRouter","Home","className","type","FormInputField","label","placeholder","propChanged","values","errorMessage","InputGroup","FormControl","as","onChange","required","key","value","item","properties","target","payload","handleSubmit","event","a","async","inputNode","preventDefault","Object","keys","payloadKey","undefined","moment","format","axios","post","formatItem","includes","substring","length","formatType","firstLetterUpperCase","toUpperCase","slice","requiredProperties","bind","get","res","data","Segment","basic","raised","Form","onSubmit","align","cellPadding","example","Button","Alert","eventDetails","linkable","Card","Title","Text","ThreadView","match","params","put","comments","alert","class","ListGroup","comment","i","Item","Prepend","aria-label","variant","DropdownList","isFetching","multiple","search","handleChange","handleClose","handleDropdown","Dropdown","fluid","selection","disabled","loading","options","noResultsMessage","onClose","selectOnNavigation","FilterForm","severity","severityList","name","optionList","text","regionList","typeList","handleBack","handleValidation","fields","generateQueryString","queryString","toString","join","queryParams","then","Grid","centered","autoComplete","animated","Content","visible","hidden","Icon","Divider","JSON","stringify","App","basename","exact","path","component","CreateAlert","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9b8ae25.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nfunction Header(props) {\n  return (\n    <Fragment>\n      <Link to={ '/' }>\n        <div>\n          <h2>{props.title}</h2>\n        </div>\n      </Link>\n    </Fragment>\n  )\n}\n\nexport default Header","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Loader, Dimmer, Table, Icon, Tab } from 'semantic-ui-react' \nimport createHistory from \"history/createBrowserHistory\"\nimport { withRouter } from 'react-router-dom';\n\nconst history = createHistory()\n\nclass ThreadAlerts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loadingData: false,\n            alerts: []\n        };\n    }\n    \n    async componentDidMount() {\n        // In case we reached this page from the filters first page.\n        try {\n            this.setState({loadingData: true})\n            console.log(\"ThreadAlerts.js/ComponentDidMount Props: \", this.props.location.state)\n            this.setState({ \n                loadingData: false,\n                alerts: this.props.location.state.alerts \n            });\n        } catch (e) {  // In case we navigate straight to the main page\n            // try {\n            //     this.setState({ loadingData: true });\n            //     const payload = await axios.get(`${this.apiServer}alerts`)\n            //     this.setState({\n            //         loadingData: false,\n            //         alerts: payload.data,\n            //     });\n            // } catch (e) {\n            //     console.log('Error while fetching alterts')\n            // }\n            console.log(\"Error! \" , e , \" Alerts State: \", this.state.alerts)\n        }\n    }\n\n    background = {\n        \"Low\": \"#000000\",\n        \"Medium\": \"#FFCC00\",\n        // \"High\": \"#FF0000\",\n        \"High\": \"#CC0000\",\n        \n    };\n\n    apiServer = 'https://socnet.pythonanywhere.com/';\n\n    renderTableData = (alerts) => {\n        return alerts.map((alertData) => {\n            const id = alertData[0]\n            const date = alertData[1]\n            const region = alertData[4]\n            const title = alertData[6]\n            const description = alertData[7]\n\n            const bgcolor = this.background\n\n            return (\n                <Table.Row \n                    onClick = {() => {\n                        this.props.history.push(`/thread/${id}`)\n                    }\n                }>\n                    {/* <Table.Cell > <Icon name=\"check\" /> </Table.Cell> */}\n                    <Table.Cell> Active </Table.Cell>\n                    <Table.Cell style={{ color: bgcolor[alertData[8]] }}> {title} </Table.Cell>\n                    <Table.Cell> {description} </Table.Cell>\n                    <Table.Cell> {region} </Table.Cell>\n                    <Table.Cell textAlign=\"right\"> {date} </Table.Cell>\n                </Table.Row>\n            )\n        })\n    }\n\n    render() {\n\n        const { loadingData, alerts } = this.state;\n        console.log(alerts);\n\n        if (loadingData) {\n            return (\n                <Dimmer active inverted>\n                    <Loader size=\"massive\"> Loading: fetching alerts..</Loader>\n                </Dimmer>\n            )\n        }\n\n        return (\n            <div style={{padding: \"2%\"}}>\n                <Table fixed singleLine padded selectable color=\"teal\">\n                    <Table.Header>\n                        <Table.HeaderCell> Status </Table.HeaderCell>\n                        <Table.HeaderCell> Type </Table.HeaderCell>\n                        <Table.HeaderCell width={6}> Description </Table.HeaderCell>\n                        <Table.HeaderCell> Region </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"right\"> Date </Table.HeaderCell>\n                    </Table.Header>\n                    <Table.Body>\n                        { this.renderTableData(alerts) }\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ThreadAlerts);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Header from './Header';\n// import Alert from './Alert';\nimport ThreadAlerts from './ThreadAlerts';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      alerts: [],\n    };\n    this.apiServer = 'https://socnet.pythonanywhere.com/'\n  }\n\n  // async componentDidMount() {\n  //   try {\n  //     this.setState({ loadingData: true });\n  //     // get the alerts from the server\n  //     const res = await axios.get(`${this.apiServer}alerts`);\n  //     // add them to the state\n  //     this.setState({\n  //       alerts: res.data,\n  //       loadingData: false,\n  //     })\n  //     console.log(this.state);\n  //   } catch (e) {\n  //     console.log('error')\n  //   }\n  // }\n\n  render() {\n    const { loadingData, alerts } = this.state\n\n    // while fetching data from the API\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n\n    return (\n      <div className=\"container\">\n        <Header title=\"Socnet\" />\n        <Link to='/createAlert'><button type=\"button\" className=\"btn btn-primary\">Create Alert</button></Link> <br /> <br />\n        <Link to='/'><button type=\"button\" className=\"btn btn-primary\">Filter Results</button></Link>\n        <ThreadAlerts />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nfunction FormInputField(props) {\n  const {\n    label, type, placeholder, propChanged, values, errorMessage\n  } = props;\n  if (typeof values !== \"undefined\") {\n    return (\n      <InputGroup className=\"mb-3\">\n        {/* <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend> */}\n        <FormControl\n          placeholder={placeholder}\n          as={type}\n          onChange={propChanged}\n          required\n        >\n          <option key=\"Choose...\">Choose...</option>\n          {values.map((value) => {\n            return (<option key={value}>{value}</option>);\n          })}\n        </FormControl>\n        <div>{errorMessage}</div>\n      </InputGroup>\n    );\n  } else {\n    return (\n      <InputGroup className=\"mb-3\">\n        {/* <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend> */}\n        <FormControl\n          placeholder={placeholder}\n          type={type}\n          onChange={propChanged}\n          required\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default FormInputField;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { Form , Button } from 'react-bootstrap';\nimport FormInputField from './FormInputField';\nimport moment from 'moment';\nimport { Header, Segment } from 'semantic-ui-react';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      properties: {},\n      requiredProperties: [],\n      payload: {}\n    };\n\n    this.apiServer = 'https://socnet.pythonanywhere.com/';\n    \n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${this.apiServer}form`);\n      this.setState({\n        properties: res.data.properties,\n        requiredProperties: res.data.required,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n  propChanged = (e, item) => {\n\n    const { properties } = this.state;\n    const { value } = e.target;\n    console.log(\"props changed properties \", properties);\n    properties[item].value = value;\n    this.setState({\n      payload: properties,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    console.log(\"event is \", this.inputNode);\n    console.log(\"before payload\", this.state.payload);\n    event.preventDefault();\n\n    const { payload } = this.state;\n    const { history } = this.props;\n\n    Object.keys(payload).map((payloadKey) => {\n      if (payloadKey === \"event_severity\" && payload[payloadKey].value === undefined) {\n        payload[payloadKey] = 'Low';\n      } else\n        payload[payloadKey] = payload[payloadKey].value;\n    });\n\n    payload[\"event_datetime\"] = moment().format(\"YYYY-MM-DD hh:mm:ss\");\n    console.log(\"after payload\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\n    \n    try {\n      await axios.post(`${this.apiServer}alerts`, payload);\n      history.push('/alerts');\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n  formatItem = (item) => {\n    if (item.includes(\"event\")){\n      item=item.substring(6,item.length);\n    }\n    else {\n      item=\"sender's name\";\n    }\n    return item;\n  }\n  formatType = (type, values) => {\n    if (typeof values === \"undefined\") {\n      if (type === \"datetime\") {\n        return \"datetime-local\";\n      } else {\n        return \"text\";\n      }\n    } else {\n      return \"select\";\n    }\n  };\n\n  firstLetterUpperCase = (item) => {\n    return item[0].toUpperCase() + item.slice(1) + \": \"\n  }\n\n  render() {\n    const { loadingData, properties, errorMessage } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n\n      <div className=\"container\">\n        <Segment basic padded>\n          <Header as=\"h1\"> Create Alerts </Header>\n          <Header> Please help us stay safe by entering the information about the incident you wish to report.</Header>\n        </Segment>\n      {/* <div className=\"container mt-5\">\n      <Segment placeholder>\n        <Header icon>\n          <Icon name='shield alternate' circular/>\n          Please help us stay safe by entering the information about the incident you wish to report.\n        </Header>\n        </Segment>\n      </div> */}\n        <Segment padded='very' raised color='teal'>\n          <Form className=\"container-fluid mt-4\" onSubmit={e => this.handleSubmit(e)}>\n            <table align=\"center\" cellPadding=\"5px\"> \n              <tbody>\n                {Object.keys(properties).map((item) => {\n                  if (item !== 'event_datetime') {\n                    return (\n                      <tr> \n                        <td>\n                          <label> {this.firstLetterUpperCase(this.formatItem(item))} </label>\n                        </td>\n                        <td> \n                          <FormInputField\n                            label={this.formatItem(item)}\n                            type={this.formatType(properties[item].type, properties[item].values)}\n                            placeholder={properties[item].example}\n                            propChanged={e => this.propChanged(e, item)}\n                            values={properties[item].values}\n                            key={this.formatItem(item)}\n                            errorMessage={errorMessage}\n                          ></FormInputField>\n                        </td>\n                      </tr>\n                    );\n                  }\n                })}\n\n              </tbody>\n            </table>\n            <Button type=\"submit\"> Submit Alert  </Button>\n          </Form>\n          </Segment>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\n\nclass Alert extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      eventDetails: this.props.data,\n    }\n    this.background = {\n      \"Low\": \"light\",\n      \"Medium\": \"warning\",\n      \"High\": \"danger\",\n    };\n    this.bgcolor = {\n      \"Low\": \"#FFFFFF\",\n      \"Medium\": \"#FFCC00\",\n      \"High\": \"#CC0000\",\n    }\n  }\n\n  render() {\n    const { eventDetails } = this.state;\n    const { linkable } = this.props\n    return (\n      <Card className=\"m-3\">\n        <Card.Header style={{background: this.bgcolor[eventDetails[8]]}}  as=\"h5\">{ eventDetails[6] }</Card.Header>\n        <Card.Body>\n          <Card.Title>{ eventDetails[7] }</Card.Title>\n          <Card.Text>\n            { `${eventDetails[3]}, ${eventDetails[4]} ${eventDetails[2]}, ${eventDetails[5]} at ${eventDetails[1]}` }\n            <br />\n            { `Priority: ${eventDetails[8]}` }\n            <br />\n            { `Author: ${eventDetails[9]}` }\n          </Card.Text>\n          {linkable ? <Link to={`/thread/${this.props.id}`}><button type=\"button\" className=\"btn btn-dark\">View Thread</button></Link> : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Header from './Header';\nimport Alert from './Alert';\nimport { ListGroup, InputGroup, FormControl, Button } from 'react-bootstrap';\n\nclass ThreadView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loadingData: false,\n      comments: [],\n      alert: [],\n    }\n    // console.log(\"Constructor: \", this.props.match.params.id )\n    this.apiServer = 'https://socnet.pythonanywhere.com/'\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      console.log(this.props);\n\n      const res = await axios.get(`${this.apiServer}threads/${this.props.match.params.id}`);\n      const alert = await axios.get(`${this.apiServer}alerts/${this.props.match.params.id}`);\n\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n        alert: alert.data[0],\n      })\n\n      console.log(this.state.comments);\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  propChanged = (e) => {\n    const { value } = e.target;\n    console.log(value)\n    const payload = { \"text\": value }\n    this.setState({\n      payload: payload,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    event.preventDefault();\n    const { payload } = this.state;\n\n    try {\n      this.setState({ loadingData: true });\n      console.log(`${this.apiServer}threads/${this.props.match.params.id}`)\n      let res = await axios.put(`${this.apiServer}threads/${this.props.match.params.id}`, payload);\n      res = await axios.get(`${this.apiServer}threads/${this.props.match.params.id}`);\n\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    const { loadingData, comments, alert } = this.state;\n\n    if (loadingData) {\n      return(\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div class=\"col-auto\">\n        <Header title=\"Socnet\" />\n        {/* <div class=\"form-check form-check-inline\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"></input>\n        <label class=\"form-check-label\" for=\"inlineRadio1\">1</label>\n        </div> */}\n        </div>\n        <Alert data={alert} id={alert[0]} />\n        \n        <ListGroup>\n          {comments.map((comment, i) => {\n            return(\n              <ListGroup.Item key={i}>{comment[Object.keys(comment)[0]]}</ListGroup.Item>\n            )\n          })}\n        </ListGroup>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Add a comment</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl onChange={this.propChanged} as=\"textarea\" aria-label=\"Add a comment\" />\n          <Button variant=\"dark\" type=\"submit\" onClick= {e => this.handleSubmit(e)}>Submit Comment</Button>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default ThreadView;\n","import React, { Component } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nclass DropdownList extends Component {\n    state = {\n        isFetching: false, \n        multiple: true, \n        search: true, \n        value: []\n    };\n    \n    handleChange = (e, { value }) => {\n        this.setState({ value })\n        console.log(this.state.value)\n    };\n\n    handleClose = (e, {value}) => {\n        console.log(this.state.value);\n        console.log(\"Name\", this.props.placeholder)\n        this.props.handleDropdown(this.props.placeholder, this.state.value)\n    };\n\n    render() {\n        const { isFetching, multiple, search, value  } = this.state\n        return (\n            <Dropdown \n                fluid\n                selection\n                disabled = {isFetching}\n                loading = {isFetching}\n                multiple = {multiple}\n                search = {search}\n                placeholder={\"Select \" + this.props.placeholder}\n                options = {this.props.options} \n                noResultsMessage = \"No results found.\"\n                onChange={this.handleChange}\n                onClose = {this.handleClose}\n                selectOnNavigation={false}\n                value = {value}\n            />\n        )\n    }\n}\n\nexport default DropdownList;","import React, { Component } from 'react';\nimport { Dimmer, Loader, Grid, Button, Form, Header, Icon, Divider, Segment } from 'semantic-ui-react';\nimport DropdownList from \"./DropdownList\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { withRouter } from 'react-router-dom';\nimport \"./Filters.css\"\nimport axios from 'axios'\n\nconst history = createHistory();\n\nclass FilterForm extends Component {\n    state = {\n        loading: false,\n        date: \"\", \n        severity: [], \n        type: [],\n        region: [], \n    };\n    \n    apiServer = 'https://socnet.pythonanywhere.com/';\n    // devApiServer = \"http://127.0.0.1:8000/\";\n\n    // Sample Input: Development time only\n    severityList = {\n        name: \"severity\",\n        type: \"dropdown\",\n        optionList: [{key: \"H\", text: \"High\", value: \"High\"}, \n                    {key: \"L\", text: \"Low\", value: \"Low\"}, \n                    {key: \"M\", text: \"Medium\", value: \"Medium\"}]\n    };\n\n    regionList = {\n        name: \"region\", \n        type: \"dropdown\", \n        optionList: [{key: \"NY\", text: \"NY - New York\", value: \"New York\"}, \n                    { key: \"NJ\", text: \"NJ - New Jersey\", value: \"New Jersey\" },\n                    { key: \"CT\", text: \"CT - Conneticut\", value: \"Conneticut\" }]\n    };\n\n    typeList = {\n        name: \"type\",\n        type: \"dropdown\",\n        optionList: [{ key: \"Fire\", text: \"Fire\", value: \"Fire\" },\n        { key: \"Earthquake\", text: \"Earthquake\", value: \"Earthquake\" },\n        { key: \"Ransomware\", text: \"Ransomware\", value: \"Ransomware\" },\n        { key: \"Malware\", text: \"Malware\", value: \"Malware\"}]\n    }\n\n    handleDropdown = (name, value) => {\n        this.setState({[name]: value}, () => {\n            console.log(name, value);\n            console.log(\"Data changed by dropdown\")\n            console.log(this.state.severity)\n        });\n    };\n    \n    // Excecuted when the back button is clicked\n    handleBack = () => {\n        // Soon to be depreciated\n        this.props.history.push('/alerts')\n    }\n\n    handleChange = (e, {name, value}) => { \n        this.setState({[name]:value})\n    }\n\n    handleValidation = () => {\n        let fields = {\n            date: this.state.date,\n            severity: this.state.severity,\n            type: this.state.type,\n            region: this.state.region\n        };\n\n        if (fields[\"date\"] || fields[\"severity\"].length > 0 || fields[\"type\"].length > 0 || fields[\"region\"].length > 0) {\n            console.log(\"User chose a filter!\")\n            return true\n        } else {\n            return false\n        }\n    }\n\n    generateQueryString = () => {\n        const { loading, date, severity, type, region } = this.state;\n        var queryString = []\n\n        if (region.length > 0) {\n            queryString.push(\"region=\"+region.toString());\n        }\n        \n        if (type.length > 0) {\n            queryString.push(\"type=\"+type.toString());\n        }\n\n        if (severity.length > 0) {\n            queryString.push(\"severity=\" + severity.toString());\n        }\n\n        if (date.length > 0) {\n            queryString.push(\"date=\"+date)\n        }\n\n        queryString = queryString.join(\"&\")\n        return queryString\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        if (this.handleValidation()) {\n            try {\n                const queryParams = this.generateQueryString()\n                console.log(\"Query Parameters: \", queryParams)\n\n                await axios.get(`${this.apiServer}alerts?${queryParams}`)\n                    .then(payload => {\n                        this.setState({ loading: false });\n                        this.props.history.push('/alerts', { alerts: payload.data });\n                    });\n            } catch (e) {\n                console.log(\"ERROR: UNABLE TO FETCH FILTERED RESULTS\")\n            }\n        } else {\n            // The user has not added any valid entries to the form\n            console.log(\"The form had no entries. Attempting to load all alerts.\")\n            try {\n                // this.setState({ loading: true });\n                await axios.get(`${this.apiServer}alerts`)\n                .then (\n                    payload => { this.setState({ loading: false, });\n                    console.log(\"Alerts loaded. Payload looks like: \", payload.data)\n                    this.props.history.push('/alerts', {alerts: payload.data})\n                })\n                \n            } catch (e) {\n                console.log('ERROR: UNABLE TO GET ALL RESULTS.')\n            }\n        }\n    }\n\n    render() {\n        const { loading, severity, date, region, type } = this.state\n\n        if (loading) {\n            return (\n                <Dimmer active inverted>\n                    <Loader size=\"massive\"> Loading: fetching alerts..</Loader>\n                </Dimmer>\n            )\n        }\n\n        return (\n            <div>\n                <Segment basic padded> <Header as=\"h1\"> Filter Alerts </Header> </Segment>\n                    <Segment padded='very' raised color='teal'>\n                        <Grid centered>\n                        <Form loading={loading} onSubmit={this.handleSubmit.bind(this)} size=\"large\" style={{ width: \"60%\" }} autoComplete=\"on\">\n                            <table align=\"center\" className=\"filters\" cellPadding=\"5px\">\n                                <tbody>\n                                    {/* Date */}\n                                    <tr>\n                                        <td> <label> Since (Date): </label>  </td>\n                                        <td>\n                                            {/* TO-DO: Input type date doesn't work with Safari and IE. */}\n                                            <input type=\"date\" placeholder=\"mm/dd/yyyy\"\n                                                onChange={(event) => this.setState({ date: event.target.value })}\n                                            />\n                                        </td>\n                                    </tr>\n\n                                    <tr>  \n                                        <td> <label> Severity: </label> </td>\n                                        <td>\n                                            < DropdownList\n                                                placeholder={this.severityList.name}\n                                                options={this.severityList.optionList}\n                                                handleDropdown={this.handleDropdown}\n                                            />\n                                        </td>\n                                    </tr>\n\n                                    <tr >\n                                        <td > <label> Type: </label> </td>\n                                        <td> \n                                            < DropdownList\n                                                placeholder={this.typeList.name}\n                                                options={this.typeList.optionList}\n                                                handleDropdown={this.handleDropdown}\n                                            />\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td> <label> Region: </label></td>\n                                        <td> \n                                            < DropdownList\n                                                placeholder={this.regionList.name}\n                                                options={this.regionList.optionList}\n                                                handleDropdown={this.handleDropdown}\n                                            />\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <br /> \n                            <Button animated onClick={e => this.handleBack.bind(this)}>\n                                <Button.Content visible> Back </Button.Content>\n                                <Button.Content hidden>\n                                    <Icon name='arrow left' />\n                                </Button.Content>\n                            </Button>\n\n                            <Button type=\"submit\" animated>\n                                <Button.Content visible>Submit</Button.Content>\n                                <Button.Content hidden>\n                                    <Icon name='arrow right' />\n                                </Button.Content>\n                            </Button>\n                        </Form>\n                    </Grid>\n                </Segment> \n                    <br />\n                    <strong> LEAVE BLANK FOR ALL </strong>\n                    <Divider />\n                    <strong> For testing before backend integration </strong>\n                    <pre>{JSON.stringify({ severity, date, region, type })}</pre>\n\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(FilterForm);","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport CreateAlert from './components/CreateAlert';\nimport ThreadView from './components/ThreadView';\nimport FilterForm from './components/FilterForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter  basename=\"/socnet/webapp.html#\">\n        <Switch>\n            <Route exact path=\"/\" component={FilterForm} />\n            <Route exact path=\"/alerts\" component={Home} />\n            <Route exact path=\"/createAlert\" component={CreateAlert} />\n            <Route exact path=\"/thread/:id\" component={ThreadView} />  \n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}