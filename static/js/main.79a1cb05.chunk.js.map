{"version":3,"sources":["config.js","fields.js","components/AlertsTable.js","components/Navbar.js","components/InfoField.js","components/ViewAlerts.js","components/Snackbar.js","components/FormInputField.js","components/CreateAlert.js","components/Alert.js","components/AlertDetail.js","components/DropdownList.js","components/SearchAlerts.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","REACT_APP_API_URL","config","flds","DATE","ID","ZIP","CITY","STATE","COUNTRY","TYPE","DESC","SEVERITY","AUTHOR","ACTIVE","colors","BLACK","YELLOW","RED","WHITE","sizes","DEFAULT_WIDTH","HEADER_WIDTH","PADDING","AlertsTable","props","severityColor","renderTableData","alerts","sort","a","b","x","y","map","alertData","id","date","region","title","description","active","icon","textColor","state","width","Table","Row","onClick","history","push","Cell","textAlign","style","color","Icon","name","loadingData","this","setState","location","axios","get","payload","data","console","log","updateWindowDimensions","window","addEventListener","bind","removeEventListener","innerWidth","Dimmer","inverted","Loader","size","padding","fixed","singleLine","padded","selectable","Header","HeaderCell","className","Body","Component","withRouter","NavBar","Menu","pointing","secondary","Item","to","fontSize","position","InfoField","numAlerts","eventDetails","label","ViewAlerts","earliestAlert","latestAlert","alertsReq","earliestReq","latestReq","all","then","spread","earliest","latest","e","oldest_alert","number_of_alerts","newest_alert","CustomSnackbar","open","message","useStyles","makeStyles","theme","root","marginTop","spacing","handleClose","event","reason","Snackbar","autoHideDuration","onClose","elevation","variant","severity","FormInputField","type","placeholder","propChanged","values","errorMessage","InputGroup","FormControl","as","onChange","required","key","value","Home","item","properties","target","handleSubmit","async","inputNode","preventDefault","Object","keys","payloadKey","undefined","moment","format","post","formatType","firstLetterUpperCase","elem","toUpperCase","slice","requiredProperties","res","Segment","basic","raised","Form","onSubmit","align","cellPadding","example","Button","Alert","background","bgcolor","linkable","Card","Title","Text","AlertDetail","match","params","put","comments","alert","paddingBlockEnd","paddingBlockStart","Comment","Group","dividing","comment","i","Author","reply","Input","content","labelPosition","primary","DropdownList","isFetching","multiple","search","handleChange","handleDropdown","Dropdown","fluid","selection","disabled","loading","options","noResultsMessage","selectOnNavigation","SearchAlerts","filters","apiServer","severityList","optionList","text","regionList","typeList","handleBack","handleValidation","fields","length","generateQueryString","queryString","toString","join","queryParams","class","animated","Content","visible","hidden","App","basename","exact","path","component","CreateAlert","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79a1cb05.chunk.js","sourcesContent":["/**\n * Default API_URL of Indra would be production URL.\n * If the user has set the environment variable - REACT_APP_API_URL -\n * then that value will be set a the API_URL.\n * One of the ways to set REACT_APP_API_URL is by running the frontend using\n * the below command -\n *        REACT_APP_API_URL=http://127.0.0.1:8000/ npm start\n * (Make sure the backend is running at http://127.0.0.1:8000/)\n *\n *\n * Note: All environment variables in create-react-app setup needs to have\n * the prefix REACT_APP_\n * For more infromation - https://create-react-app.dev/docs/adding-custom-environment-variables/\n */\nlet API_URL = 'https://socnet.pythonanywhere.com/';\n\nif (process.env.REACT_APP_API_URL) {\n  API_URL = process.env.REACT_APP_API_URL;\n}\n\nconst config = { API_URL };\n\nexport default config;\n","/*\n *\n * This file holds constants for field positions for alert data.\n *\n * */\n\nconst ID = 0;\nconst DATE = 1;\nconst ZIP = 2;\nconst CITY = 3;\nconst STATE = 4;\nconst COUNTRY = 5;\nconst TYPE = 6;\nconst DESC = 7;\nconst SEVERITY = 8;\nconst AUTHOR = 9;\nconst ACTIVE = 10;\nconst BLACK = \"#000000\";\nconst YELLOW = \"#FFCC00\";\nconst RED =  \"#CC0000\";\nconst WHITE = \"FFFFFF\"\nconst DEFAULT_WIDTH = 450\nconst HEADER_WIDTH = 5;\nconst PADDING = \"2%\";\nconst flds = { DATE, ID, ZIP, CITY, STATE, COUNTRY, TYPE, DESC, SEVERITY,\n              AUTHOR, ACTIVE };\n\nconst colors = { BLACK, YELLOW, RED, WHITE };\n\nconst sizes = { DEFAULT_WIDTH, HEADER_WIDTH, PADDING };\n\nexport { flds as default, colors, sizes };\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Loader, Dimmer, Table, Icon } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom';\nimport config from '../config';\nimport flds, { colors, sizes } from '../fields';\nimport './styles.css';\n\n\nclass AlertsTable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loadingData: false,\n            alerts: [],\n            width: 0\n        };\n    }\n\n    async componentDidMount() {\n        // In case we reached this page from the filters first page.\n        try {\n            this.setState({loadingData: true})\n            // console.log(\"ThreadAlerts.js/ComponentDidMount Props: \", this.props.location.state)\n            this.setState({\n                loadingData: false,\n                alerts: this.props.location.state.alerts\n            });\n        } catch (e) {  // In case we navigate straight to the main page\n            try {\n                this.setState({ loadingData: true });\n                const payload = await axios.get(`${config.API_URL}alerts`)\n                this.setState({\n                    loadingData: false,\n                    alerts: payload.data\n                });\n            } catch (e) {\n                this.setState({\n                    // must put message to the screen here!\n                    loadingData: false\n                })\n                console.log('Error while fetching alerts')\n            }\n            console.log(\"Error! \" , e , \" Alerts State: \", this.state.alerts)\n        }\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth });\n        console.log(this.state.width);\n    }\n\n    severityColor = {\n        \"Low\": colors.BLACK,\n        \"Medium\": colors.YELLOW,\n        \"High\": colors.RED,\n    };\n\n    renderTableData = (alerts) => {\n        // sort alerts with active ahead of inactive\n        alerts.sort((a, b) => {\n            let x = a[flds.ACTIVE],\n                y = b[flds.ACTIVE]\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n\n        return alerts.map((alertData) => {\n\n            const id = alertData[flds.ID]\n            const date = alertData[flds.DATE]\n            const region = alertData[flds.STATE]\n            const title = alertData[flds.TYPE]\n            const description = alertData[flds.DESC]\n            const active = alertData[flds.ACTIVE];\n            const icon = active === \"Active\" ? \"check\" : \"close\";\n            const textColor = this.severityColor;\n\n            if (this.state.width > sizes.DEFAULT_WIDTH) {\n                return (\n                    <Table.Row\n                        onClick={() => {\n                            this.props.history.push(`/thread/${id}`)\n                        }\n                        }>\n                        <Table.Cell textAlign=\"left\"> {active} </Table.Cell>\n                        <Table.Cell style={{ color: textColor[alertData[flds.SEVERITY]] }}> {title} </Table.Cell>\n                        <Table.Cell > {description} </Table.Cell>\n                        <Table.Cell> {region} </Table.Cell>\n                        <Table.Cell textAlign=\"right\"> {date} </Table.Cell>\n                    </Table.Row>\n                )\n            } else {\n                return (\n                    <Table.Row\n                        onClick={() => {\n                            this.props.history.push(`/thread/${id}`)\n                        }\n                        }>\n                        <Table.Cell textAlign=\"left\"> <Icon name={icon} /> </Table.Cell>\n                        <Table.Cell style={{ color: textColor[alertData[flds.SEVERITY]] }}> {title} </Table.Cell>\n                        <Table.Cell> {region} </Table.Cell>\n                        <Table.Cell textAlign=\"right\"> {date} </Table.Cell>\n                    </Table.Row>\n                )\n            }\n\n        })\n    }\n\n    render() {\n\n        const { loadingData, alerts } = this.state;\n        //console.log(alerts);\n\n        if (loadingData) {\n            return (\n                <Dimmer active inverted>\n                    <Loader size=\"massive\"> Loading: fetching alerts..</Loader>\n                </Dimmer>\n            )\n        }\n\n        return (\n            <div style={{padding: sizes.PADDING}}>\n                <Table fixed singleLine padded selectable color=\"teal\">\n                    <Table.Header>\n                        <Table.HeaderCell> Status </Table.HeaderCell>\n                        <Table.HeaderCell> Type </Table.HeaderCell>\n                        <Table.HeaderCell width={sizes.HEADER_WIDTH} className=\"hide-mobile\"> Description </Table.HeaderCell>\n                        <Table.HeaderCell> Region </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"right\"> Date </Table.HeaderCell>\n                    </Table.Header>\n                    <Table.Body>\n                        { this.renderTableData(alerts) }\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AlertsTable);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon } from 'semantic-ui-react';\n\nexport default class NavBar extends Component {\n    render() {\n        return (\n            <Menu pointing secondary>\n                <Menu.Item active={true}>\n                    <span> \n                        <Link to=\"/alerts\" style={{ fontSize: 20, color: \"black\"}}> SOCNET </Link>\n                    </span>\n                </Menu.Item>\n                    \n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        <Link to='/createAlert'>\n                            <Icon name=\"add\" /> Create Alert\n                        </Link>\n                    </Menu.Item>\n\n                    <Menu.Item> \n                        <Link to='/'>\n                            <Icon name=\"filter\" /> Filter Results\n                        </Link>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        )\n    }\n};\n","import React, { Component } from 'react';\n//import { Link } from 'react-router-dom';\nimport './styles.css';\n\n\nclass InfoField extends Component {\n/*\n * We need a constructor that gets passed:\n *   * label\n *   * data\n *   For ex., see Alert.js\n *   Line 83 in ThreadView.js shows the use of the constructor.\n */\n  constructor(props){\n    super(props);\n    this.state = {\n      eventDetails: this.props.data,\n    }\n  }\n\n\n  state = {\n    numAlerts: \"\"\n  };\n\n    render() {\n        return (\n          <>\n            {`${this.props.label}`}: {this.props.data}\n          </>\n        )\n    }\n}\n\nexport default InfoField;\n","import React, { Component } from 'react';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport AlertsTable from './AlertsTable';\nimport './styles.css';\nimport NavBar from './Navbar';\nimport axios from 'axios';\nimport config from '../config';\nimport InfoField from './InfoField';\n\nclass ViewAlerts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numAlerts: 0,\n      earliestAlert: '',\n      latestAlert: '',\n      loadingData: true,\n    };\n  }\n\n async componentDidMount() {\n   try {\n      this.setState({ loadingData: true });\n      let alertsReq = axios.get(`${config.API_URL}number_of_alerts`);\n      let earliestReq = axios.get(`${config.API_URL}oldest_alert`);\n      let latestReq = axios.get(`${config.API_URL}newest_alert`);\n      axios.all([alertsReq, earliestReq, latestReq]).then(axios.spread((...responses) => {\n        const numAlerts = responses[0]\n        const earliest = responses[1]\n        const latest = responses[2]\n\n        this.setState({\n          numAlerts: numAlerts.data,\n          earliest : earliest.data,\n          latest :  latest.data,\n          loadingData: false,\n        })\n      }));\n\n   } catch (e) {\n       console.log(\"Unable to fetch number of alerts.\")\n       this.setState({ loadingData: false });\n   }\n }\n\n  render() {\n    const loadingData  = this.state.loadingData;\n\n    // while fetching data from the API\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n    return (\n      <div className=\"container\">\n          {}\n        <NavBar />\n        <div id='left'>\n        { <InfoField label={\"Earliest alert posted\"} data={this.state.earliest.oldest_alert}/> }\n        </div>\n        <InfoField label={\"Number of alerts\"} data={this.state.numAlerts.number_of_alerts}/>\n        <div id='right'>\n        { <InfoField label={\"Lastest alert posted\"} data={this.state.latest.newest_alert}/> }\n        </div>\n        <AlertsTable />\n      </div>\n    );\n  }\n}\n\nexport default ViewAlerts;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass CustomSnackbar extends Component {\n\n    state = {\n        open: this.props.open,\n        message: this.props.message,\n    };\n\n    useStyles = makeStyles((theme) => ({\n        root: {\n            width: \"100%\",\n            \"& > * + *\": {\n                marginTop: theme.spacing(2)\n            }\n        }\n    }));\n\n    handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        this.setState({open: false});\n    };\n\n    render () {\n        const { open, message }= this.state;\n        return (\n            <div >\n                <Snackbar open={ open } autoHideDuration = {6000} onClose = { this.handleClose } >\n                <MuiAlert elevation={6} variant=\"filled\" onClose={ this.handleClose } severity=\"success\" >\n                    {message}\n                </MuiAlert>\n                </Snackbar>\n            </div>\n        );\n    }\n\n}\n\nexport default CustomSnackbar;\n","import React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nfunction FormInputField(props) {\n\n  const { type, placeholder, propChanged, values, errorMessage } = props;\n\n  if (typeof values !== \"undefined\") {\n    return (\n      <InputGroup className=\"mb-3\">\n        \n        < FormControl\n          placeholder={placeholder}\n          as={type}\n          onChange={propChanged}\n          required\n        >\n          <option key=\"Choose...\">Choose...</option>\n          {values.map((value) => {\n            return (<option key={value}>{value}</option>);\n          })}\n        </FormControl>\n        <div>{errorMessage}</div>\n      </InputGroup>\n    );\n  } else {\n    return (\n      <InputGroup className=\"mb-3\">\n        {/* <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend> */}\n        <FormControl\n          placeholder={placeholder}\n          type={type}\n          onChange={propChanged}\n          required\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default FormInputField;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Loader, Dimmer, Header, Segment } from 'semantic-ui-react';\nimport { Form , Button } from 'react-bootstrap';\nimport CustomSnackbar from './Snackbar';\nimport config from '../config';\n\nimport NavBar from './Navbar';\nimport FormInputField from './FormInputField';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      properties: {},\n      requiredProperties: [],\n      payload: {},\n      open: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${config.API_URL}form`);\n      this.setState({\n        properties: res.data.properties,\n        requiredProperties: res.data.required,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  propChanged = (e, item) => {\n\n    const { properties } = this.state;\n    const { value } = e.target;\n    console.log(\"props changed properties \", properties);\n    properties[item].value = value;\n    this.setState({\n      payload: properties,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    console.log(\"event is \", this.inputNode);\n    console.log(\"before payload\", this.state.payload);\n    event.preventDefault();\n\n    const { payload } = this.state;\n    //const { history } = this.props;\n\n    Object.keys(payload).map((payloadKey) => {\n      if (payloadKey === \"severity\" && payload[payloadKey].value === undefined) {\n        return payload[payloadKey] = 'Low';\n      } else\n        return payload[payloadKey] = payload[payloadKey].value;\n    });\n\n    payload[\"datetime\"] = moment().format(\"YYYY-MM-DD hh:mm:ss\");\n    console.log(\"after payload\", moment().format(\"YYYY-MM-DD hh:mm:ss\"));\n\n    try {\n      await axios.post(`${config.API_URL}alerts`, payload);\n      this.setState({open: true})\n      // Commented by Harman Chawla.\n      // Uncomment this (and line 57) if you want to redirect the user to alerts table\n      // when an alert is created.\n      //history.push('/alerts');\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  formatType = (type, values) => {\n    if (typeof values === \"undefined\") {\n      if (type === \"datetime\") {\n        return \"datetime-local\";\n      } else {\n        return \"text\";\n      }\n    } else {\n      return \"select\";\n    }\n  };\n\n  firstLetterUpperCase = (elem) => {\n    return elem[0].toUpperCase() + elem.slice(1) + \": \"\n  }\n\n  render() {\n    const { loadingData, properties, errorMessage } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n\n      <div className=\"container\">\n        < NavBar />\n        <Segment basic padded>\n          <Header as=\"h1\"> Create Alerts </Header>\n          <Header> Please help us stay safe by entering the information about the incident you wish to report.</Header>\n        </Segment>\n      {/* Commenting the code below. Deprecated in favor of the new UI. */}\n      {/* <div className=\"container mt-5\">\n      <Segment placeholder>\n        <Header icon>\n          <Icon name='shield alternate' circular/>\n          Please help us stay safe by entering the information about the incident you wish to report.\n        </Header>\n        </Segment>\n      </div> */}\n        <Segment padded='very' raised color='teal'>\n          <Form className=\"container-fluid mt-4\" onSubmit={e => this.handleSubmit(e)}>\n            <table align=\"center\" cellPadding=\"5px\">\n              <tbody>\n                {Object.keys(properties).map((item) => {\n                  //console.log(item);\n                  if (item !== 'datetime') {\n                    return (\n                      <tr>\n                        <td style={{textAlign: \"left\"}}>\n                          <label> { this.firstLetterUpperCase(item) } </label>\n                        </td>\n                        <td>\n                          <FormInputField\n                            // label={this.formatItem(item)}\n                            type={this.formatType(properties[item].type, properties[item].values)}\n                            placeholder={properties[item].example}\n                            propChanged={e => this.propChanged(e, item)}\n                            values={properties[item].values}\n                            // key={this.formatItem(item)}\n                            errorMessage={errorMessage}\n                          ></FormInputField>\n                        </td>\n                      </tr>\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n            <Button type=\"submit\"> Submit Alert  </Button>\n          </Form>\n        </Segment>\n        <CustomSnackbar open={this.state.open} message=\"Successfully created!\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport flds, { colors } from '../fields';\n\nclass Alert extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      eventDetails: this.props.data,\n    }\n    this.background = {\n      \"Low\": \"light\",\n      \"Medium\": \"warning\",\n      \"High\": \"danger\",\n    };\n    this.bgcolor = {\n      \"Low\": colors.WHITE,\n      \"Medium\": colors.YELLOW,\n      \"High\": colors.RED,\n    }\n  }\n  render() {\n    const { eventDetails } = this.state;\n    const { linkable } = this.props\n    return (\n      <Card className=\"m-3\">\n        <Card.Header style={{background: this.bgcolor[eventDetails[flds.SEVERITY]]}}  as=\"h5\"> {eventDetails[flds.TYPE]} </Card.Header>\n        <Card.Body>\n          <Card.Title>{ eventDetails[flds.DESC] }</Card.Title>\n          <Card.Text>\n            { `${eventDetails[flds.CITY]}, ${eventDetails[flds.STATE]}\n            ${eventDetails[flds.ZIP]}, ${eventDetails[flds.COUNTRY]}\n            at ${eventDetails[flds.DATE]}` }\n            <br />\n            { `Priority: ${eventDetails[flds.SEVERITY]}` }\n            <br />\n            { `Author: ${eventDetails[flds.AUTHOR]}` }\n          </Card.Text>\n          {linkable ? <Link to={`/thread/${this.props.id}`}><button type=\"button\" className=\"btn btn-dark\">View Thread</button></Link> : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Icon, Header, Loader, Dimmer, Comment, Form, Button } from 'semantic-ui-react';\nimport NavBar from './Navbar';\nimport Alert from './Alert';\nimport config from '../config';\n\nclass AlertDetail extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loadingData: false,\n      comments: [],\n      alert: [],\n    }\n    // console.log(\"Constructor: \", this.props.match.params.id )\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      console.log(this.props);\n\n      const res = await axios.get(`${config.API_URL}threads/${this.props.match.params.id}`);\n      const alert = await axios.get(`${config.API_URL}alerts/${this.props.match.params.id}`);\n\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n        alert: alert.data[0],\n      })\n\n      console.log(this.state.comments);\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  propChanged = (e) => {\n    const { value } = e.target;\n    console.log(value)\n    const payload = { \"text\": value }\n    this.setState({\n      payload: payload,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    event.preventDefault();\n    const { payload } = this.state;\n\n    try {\n      this.setState({ loadingData: true });\n      console.log(`${config.API_URL}threads/${this.props.match.params.id}`)\n      let res = await axios.put(`${config.API_URL}threads/${this.props.match.params.id}`, payload);\n      res = await axios.get(`${config.API_URL}threads/${this.props.match.params.id}`);\n\n      this.setState({\n        comments: res.data,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    const { loadingData, comments, alert } = this.state;\n\n    if (loadingData) {\n      return(\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        < NavBar />\n        <Alert data={alert} id={alert[0]} />\n\n        <div style={{ textAlign: \"left\", paddingBlockEnd: 15, paddingBlockStart: 15 }} >\n          <Comment.Group>\n            <Header as='h3' dividing>\n              Comments\n            </Header>\n            {comments.map((comment, i) => {\n              return (\n                <Comment>\n                  <Comment.Author style={{ fontSize: 15 }}> <Icon name=\"user\" /> Anonymous </Comment.Author>\n                  <Comment.Text style={{ fontSize: 15 }}> {comment[Object.keys(comment)[0]]} </Comment.Text>\n                </Comment>\n              )\n            })\n            }\n            <Form reply>\n              <Form.Input placeholder=\"Type your comment here.\" onChange={this.propChanged} />\n              <Button content='Add Comment' labelPosition='left' icon='edit' primary onClick={e => this.handleSubmit(e)} />\n            </Form>\n          </Comment.Group>\n        </div>\n\n        {/* <ListGroup>\n          {comments.map((comment, i) => {\n            return (\n              <ListGroup.Item key={i}>{comment[Object.keys(comment)[0]]}</ListGroup.Item>\n            )\n          })}\n        </ListGroup>\n        \n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Add a comment</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl onChange={this.propChanged} as=\"textarea\" aria-label=\"Add a comment\" />\n          <Button variant=\"dark\" type=\"submit\" onClick={e => this.handleSubmit(e)}>Submit Comment</Button>\n        </InputGroup>\n        <br/> \n        <br /> */}\n        \n        {/*  Dennis' Code: */}\n        {/* <div class=\"col-auto\">\n        <div class=\"form-check form-check-inline\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"></input>\n        <label class=\"form-check-label\" for=\"inlineRadio1\">1</label>\n        </div> \n        </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default AlertDetail;\n","import React, { Component } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\n// The module requires three props:\n// // placeholder: identify the dropdown menu\n// // options: array of dropdown options structured as {key, name, value}\n// // handleDropdown: a handler function which accepts the selcted values \n\nclass DropdownList extends Component {\n    state = {\n        isFetching: false,  // animates a spinning wheel during search\n        multiple: true, \n        search: true, \n        value: [] \n    };\n    \n    // Maintain the state as the user changes the selection(s).\n    handleChange = (e, { value }) => {\n        this.setState({ value })\n        // console.log(this.state.value)\n    };\n\n    // Once the dropdown is closed, the control is packed back \n    // to a handler. placeholder is used as an identifier and \n    // value holds the dropdown selections (empty array if no selections)\n    handleClose = (e, {value}) => {\n        //console.log(this.state.value);\n        //console.log(\"Name\", this.props.placeholder)\n        this.props.handleDropdown(this.props.placeholder, this.state.value)\n    };\n\n    render() {\n        const { isFetching, multiple, search, value  } = this.state\n        return (\n            <Dropdown \n                fluid\n                selection\n                disabled = {isFetching}\n                loading = {isFetching}\n                multiple = {multiple}\n                search = {search}\n                placeholder={\"Select \" + this.props.placeholder}\n                options = {this.props.options} \n                noResultsMessage = \"No results found.\"\n                onChange={this.handleChange}\n                onClose = {this.handleClose}\n                selectOnNavigation={false}\n                value = {value}\n            />\n        )\n    }\n}\n\nexport default DropdownList;","import React, { Component } from 'react';\nimport { Dimmer, Loader, Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport DropdownList from \"./DropdownList\";\nimport NavBar from './Navbar';\nimport config from '../config';\n\nclass SearchAlerts extends Component {\n    state = {\n        loading: false,\n        date: \"\",\n        severity: [],\n        type: [],\n        region: [],\n        filters: \"\"\n    };\n\n    apiServer = 'https://socnet.pythonanywhere.com/';\n    // devApiServer = \"http://127.0.0.1:8000/\";\n\n    async componentDidMount() {\n        try {\n            axios.get(`${config.API_URL}filters`)\n            .then( payload => {\n                this.setState({filters: payload.data})\n                //this.transformFilterData();\n            });\n        } catch (e) {\n            console.log(\"Unable to fetch values for the filter form.\")\n        }\n\n    }\n\n    // Sample Input: Development time only\n    severityList = {\n        name: \"severity\",\n        type: \"dropdown\",\n        optionList: [{key: \"H\", text: \"High\", value: \"High\"},\n                    {key: \"L\", text: \"Low\", value: \"Low\"},\n                    {key: \"M\", text: \"Medium\", value: \"Medium\"}]\n    };\n\n    regionList = {\n        name: \"region\",\n        type: \"dropdown\",\n        optionList: [{key: \"NY\", text: \"NY - New York\", value: \"New York\"},\n                    { key: \"NJ\", text: \"NJ - New Jersey\", value: \"New Jersey\" },\n                    { key: \"CT\", text: \"CT - Conneticut\", value: \"Conneticut\" }]\n    };\n\n    typeList = {\n        name: \"type\",\n        type: \"dropdown\",\n        optionList: [{ key: \"Fire\", text: \"Fire\", value: \"Fire\" },\n        { key: \"Earthquake\", text: \"Earthquake\", value: \"Earthquake\" },\n        { key: \"Ransomware\", text: \"Ransomware\", value: \"Ransomware\" },\n        { key: \"Malware\", text: \"Malware\", value: \"Malware\"}]\n    }\n\n    handleDropdown = (name, value) => {\n        this.setState({[name]: value}, () => {\n            console.log(name, value);\n            console.log(\"Data changed by dropdown\")\n            console.log(this.state.severity)\n        });\n    };\n\n    // Excecuted when the back button is clicked\n    handleBack = () => {\n        // Soon to be depreciated\n        this.props.history.push('/alerts')\n    }\n\n    handleChange = (e, {name, value}) => {\n        this.setState({[name]:value})\n    }\n\n    handleValidation = () => {\n        let fields = {\n            date: this.state.date,\n            severity: this.state.severity,\n            type: this.state.type,\n            region: this.state.region\n        };\n\n        if (fields[\"date\"] || fields[\"severity\"].length > 0 || fields[\"type\"].length > 0 || fields[\"region\"].length > 0) {\n            console.log(\"User chose a filter!\")\n            return true\n        } else {\n            return false\n        }\n    }\n\n    generateQueryString = () => {\n        const { date, severity, type, region } = this.state;\n        var queryString = [];\n\n        if (region.length > 0) {\n            queryString.push(\"region=\" + region.toString());\n        }\n\n        if (type.length > 0) {\n            queryString.push(\"type=\" + type.toString());\n        }\n\n        if (severity.length > 0) {\n            queryString.push(\"severity=\" + severity.toString());\n        }\n\n        if (date.length > 0) {\n            queryString.push(\"date=\" + date)\n        }\n\n        queryString = queryString.join(\"&\");\n        return queryString\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        if (this.handleValidation()) {\n            try {\n                // console.log(this.state.region)\n                // await axios.get(`${this.apiServer}alerts`, {\n                //     params: {\n                //         region: this.state.region.toString(),\n                //         type: this.state.region.toString(),\n                //         severity: this.state.severity.toString(),\n                //         date: this.state.date\n                //     }\n                // })\n                //     .then(payload => {\n                //         this.setState({ loading: false });\n                //         this.props.history.push('/alerts', { alerts: payload.data });\n                //     });\n                const queryParams = this.generateQueryString()\n                console.log(\"Query Parameters: \", queryParams)\n                await axios.get(`${this.apiServer}alerts?${queryParams}`)\n                    .then(payload => {\n                        this.setState({ loading: false });\n                        this.props.history.push('/alerts', { alerts: payload.data });\n                    });\n            } catch (e) {\n                console.log(\"ERROR: UNABLE TO FETCH FILTERED RESULTS\")\n            }\n        } else {\n            // The user has not added any valid entries to the form\n            console.log(\"The form had no entries. Attempting to load all alerts.\")\n            try {\n                // this.setState({ loading: true });\n                await axios.get(`${this.apiServer}alerts`)\n                .then (\n                    payload => { this.setState({ loading: false, });\n                    console.log(\"Alerts loaded. Payload looks like: \", payload.data)\n                    this.props.history.push('/alerts', {alerts: payload.data})\n                })\n\n            } catch (e) {\n                console.log('ERROR: UNABLE TO GET ALL RESULTS.')\n            }\n        }\n    }\n\n    render() {\n\n        const loading = this.state.loading;\n\n        if (loading) {\n            return (\n                <Dimmer active inverted>\n                    <Loader size=\"massive\"> Loading: fetching alerts..</Loader>\n                </Dimmer>\n            )\n        }\n\n        return (\n            <div class=\"container\">\n                < NavBar />\n                <Segment basic padded>\n                    <Header as=\"h1\"> Filter Alerts </Header>\n                    <Header> Leave all fields blank to see all results.</Header>\n                </Segment>\n                <Segment padded='very' raised color='teal'>\n                    <Form className=\"container-fluid mt-4\" onSubmit={this.handleSubmit.bind(this)}>\n                        <table align=\"center\" cellPadding=\"5px\">\n                            <tbody>\n                                {/* Date */}\n                                <tr>\n                                    <td> <label> Since (Date): </label>  </td>\n                                    <td>\n                                        {/* TO-DO: Input type date doesn't work with Safari and IE. */}\n                                        {/* Work around: Text input is formated into a datetime at the backend */}\n                                        <input type=\"date\" placeholder=\"mm/dd/yyyy\"\n                                            onChange={(event) => this.setState({ date: event.target.value })}\n                                        />\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td> <label> Severity: </label> </td>\n                                    <td>\n                                        < DropdownList\n                                            placeholder={this.severityList.name}\n                                            options={this.severityList.optionList}\n                                            handleDropdown={this.handleDropdown}\n                                        />\n                                    </td>\n                                </tr>\n\n                                <tr >\n                                    <td > <label> Type: </label> </td>\n                                    <td>\n                                        < DropdownList\n                                            placeholder={this.typeList.name}\n                                            options={this.typeList.optionList}\n                                            handleDropdown={this.handleDropdown}\n                                        />\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td> <label> Region: </label></td>\n                                    <td>\n                                        < DropdownList\n                                            placeholder={this.regionList.name}\n                                            options={this.regionList.optionList}\n                                            handleDropdown={this.handleDropdown}\n                                        />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br />\n                        <Button animated onClick={e => this.handleBack.bind(this)}>\n                            <Button.Content visible> Back </Button.Content>\n                            <Button.Content hidden>\n                                <Icon name='arrow left' />\n                            </Button.Content>\n                        </Button>\n\n                        <Button type=\"submit\" animated>\n                            <Button.Content visible>Submit</Button.Content>\n                            <Button.Content hidden>\n                                <Icon name='arrow right' />\n                            </Button.Content>\n                        </Button>\n                    </Form>\n                </Segment>\n\n                {/* DEVELOPMENT ONLY: Uncomment below to see state as it gets changed. */}\n                {/*  <br />\n                    <pre>{JSON.stringify({ severity, date, region, type })}</pre>\n                */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SearchAlerts);\n","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport ViewAlerts from './components/ViewAlerts';\nimport CreateAlert from './components/CreateAlert';\nimport AlertDetail from './components/AlertDetail';\nimport SearchAlerts from './components/SearchAlerts';\n\n/*\n * 2) FilterForm --> SearchAlerts\n * 3) Home --> ViewAlerts\n * 4) ThreadAlerts --> AlertsTable\n */\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter  basename=\"/socnet/webapp.html#\">\n        <Switch>\n            <Route exact path=\"/\" component={SearchAlerts} />\n            <Route exact path=\"/alerts\" component={ViewAlerts} />\n            <Route exact path=\"/createAlert\" component={CreateAlert} />\n            <Route exact path=\"/thread/:id\" component={AlertDetail} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}