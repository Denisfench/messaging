{"version":3,"sources":["components/Header.js","components/Alert.js","components/Home.js","components/FormInputField.js","components/CreateAlert.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","to","title","Alert","state","eventDetails","data","background","this","Card","bg","className","as","Body","Title","Text","Button","variant","Component","Home","loadingData","alerts","apiServer","setState","axios","get","res","console","log","Dimmer","active","inverted","Loader","size","type","map","alert","key","FormInputField","label","placeholder","propChanged","values","InputGroup","Prepend","id","FormControl","onChange","value","e","item","properties","target","payload","handleSubmit","event","a","async","inputNode","preventDefault","history","Object","keys","payloadKey","undefined","moment","Date","toLocaleString","format","post","push","formatItem","includes","substring","length","formatType","requiredProperties","bind","required","Segment","placeholde","icon","Icon","name","circular","Form","example","onClick","App","exact","path","component","CreateAlert","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c88d00ba.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nfunction Header(props) {\n  return (\n    <Fragment>\n      <Link to={ '/' }>\n        <div>\n          <h2>{props.title}</h2>\n        </div>\n      </Link>\n    </Fragment>\n  )\n}\n\nexport default Header","import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nclass Alert extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      eventDetails: this.props.data,\n    }\n    this.background = {\n      \"Low\": \"light\",\n      \"Medium\": \"warning\",\n      \"High\": \"danger\",\n    };\n  }\n\n  render() {\n    const { eventDetails } = this.state;\n    return (\n      <Card bg={this.background[eventDetails[8]]} className=\"m-3\">\n        <Card.Header as=\"h5\">{ eventDetails[6] }</Card.Header>\n        <Card.Body>\n          <Card.Title>{ eventDetails[7] }</Card.Title>\n          <Card.Text>\n            { `${eventDetails[3]}, ${eventDetails[4]} ${eventDetails[2]}, ${eventDetails[5]} at ${eventDetails[1]}` }\n            <br />\n            { `Priority: ${eventDetails[8]}` }\n            <br />\n            { `Author: ${eventDetails[9]}` }\n          </Card.Text>\n          <Button variant=\"dark\">View Thread</Button>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport Header from './Header';\nimport Alert from './Alert';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      alerts: [],\n    };\n    this.apiServer = 'https://socnet.pythonanywhere.com/'\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${this.apiServer}alerts`);\n      this.setState({\n        alerts: res.data,\n        loadingData: false,\n      })\n      console.log(this.state);\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  render() {\n    const { loadingData, alerts } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <Header title=\"Socnet\" />\n        <Link to='/createAlert'><button type=\"button\" className=\"btn btn-primary\">Create Alert</button></Link>\n        {alerts.map((alert) =>{\n          return (\n            <Alert\n              data={alert}\n              key={alert[0]}\n            />\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nfunction FormInputField(props) {\n  const {\n    label, type, placeholder, propChanged, values\n  } = props;\n  if (typeof values !== \"undefined\") {\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder={placeholder}\n          as={type}\n          onChange={propChanged}\n        >\n          <option key=\"Choose...\">Choose...</option>\n          {values.map((value) => {\n            return (<option key={value}>{value}</option>);\n          })}\n        </FormControl>\n      </InputGroup>\n    );\n  } else {\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">{label}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder={placeholder}\n          type={type}\n          onChange={propChanged}\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default FormInputField;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormInputField from './FormInputField';\nimport moment from 'moment';\nimport { Header, Icon, Segment } from 'semantic-ui-react';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingData: false,\n      properties: {},\n      requiredProperties: [],\n      payload: {}\n    };\n\n    this.apiServer = 'https://socnet.pythonanywhere.com/';\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loadingData: true });\n      const res = await axios.get(`${this.apiServer}form`);\n      this.setState({\n        properties: res.data.properties,\n        requiredProperties: res.data.required,\n        loadingData: false,\n      })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n  propChanged = (e, item) => {\n\n    const { properties } = this.state;\n    const { value } = e.target;\n    console.log(\"props changed properties \", properties);\n    properties[item].value = value;\n    this.setState({\n      payload: properties,\n    })\n  }\n\n  handleSubmit = async(event) => {\n    console.log(\"event is \", this.inputNode);\n    console.log(\"before payload\", this.state.payload);\n    event.preventDefault();\n    const { payload } = this.state;\n    const { history } = this.props;\n\n    Object.keys(payload).map((payloadKey) => {\n      if (payloadKey === \"event_severity\" && payload[payloadKey].value === \"Choose...\")\n        payload[payloadKey] = undefined;\n      else\n        payload[payloadKey] = payload[payloadKey].value;\n    });\n\n    payload[\"event_datetime\"] = moment(new Date().toLocaleString()).format('YYYY/MM/DD h:mm:ss');\n    console.log(\"after payload\", payload);\n    try {\n\n      const res = await axios.post(`${this.apiServer}alerts`, payload);\n      history.push('/');\n\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n  formatItem = (item) => {\n    if (item.includes(\"event\")){\n      item=item.substring(6,item.length);\n    }\n    else {\n      item=\"sender's name\";\n    }\n    return item;\n  }\n  formatType = (type, values) => {\n    if (typeof values === \"undefined\") {\n      if (type === \"datetime\") {\n        return \"datetime-local\";\n      } else {\n        return \"text\";\n      }\n    } else {\n      return \"select\";\n    }\n  };\n\n  render() {\n    const { loadingData, properties } = this.state\n\n    if (loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\">Loading</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n\n      <div className=\"container\">\n      <div className=\"container mt-5\">\n      <style>{'body { background-color: grey; }'}</style>\n      <Segment placeholde >\n        <Header icon>\n          <Icon name='shield alternate' circular/>\n          Please help us stay safe by entering the information about the incident you wish to report.\n        </Header>\n        </Segment>\n      </div>\n          <Form className=\"container-fluid mt-4\">\n            {Object.keys(properties).map((item) => {\n              return (\n                <FormInputField\n                  label={this.formatItem(item)}\n                  type={this.formatType(properties[item].type, properties[item].values)}\n                  placeholder={properties[item].example}\n                  propChanged={e => this.propChanged(e, item)}\n                  values={properties[item].values}\n                  key={this.formatItem(item)}\n                ></FormInputField>\n              );\n            })}\n            <Button variant=\"dark\" type=\"submit\" onClick= {e => this.handleSubmit(e)}>Submit Alert</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport CreateAlert from './components/CreateAlert';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/createAlert\" component={ CreateAlert } />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}